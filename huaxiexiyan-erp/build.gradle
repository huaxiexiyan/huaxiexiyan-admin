plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.12'
	id 'io.spring.dependency-management' version '1.1.4'
//	id 'org.graalvm.buildtools.native' version '0.10.6'
	// id 'com.google.cloud.tools.jib'
}

group = 'com.huaxiexiyan'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

// 指定编码格式
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// dependencyManagement版本统一管理，类似于父maven的dependencyManagement
// Spring Cloud 2023 与 Spring Boot 3.2.x 3.2.12
dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.6"
		mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:2023.0.1.0"
        mavenBom "com.baomidou:mybatis-plus-bom:3.5.12"
	}
}

repositories {
	//maven仓库
	mavenLocal()
	maven { url 'https://maven.aliyun.com/repository/central/' }
	maven { url 'https://maven.aliyun.com/repository/public/' }
	maven { url 'https://maven.aliyun.com/repository/spring/' }
	maven { url 'https://maven.aliyun.com/repository/google/' }
	maven { url 'https://maven.aliyun.com/repository/gradle-plugin/' }
	maven { url 'https://maven.aliyun.com/repository/spring-plugin/' }
	maven { url 'https://maven.aliyun.com/repository/grails-core/' }
	maven { url 'https://maven.aliyun.com/repository/apache-snapshots/' }
	maven { url 'https://repo.spring.io/milestone/' }
	mavenCentral()
}

dependencies {
    implementation 'com.huaxiexiyan:huaxiexiyan-common-api:0.0.1-SNAPSHOT'
    //服务健康
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //cloud组件
    // spring 家族
    implementation('org.springframework.boot:spring-boot-starter-web') {
        transitive = true
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    // 配置解释器
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    // 服务注册与发现
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    //
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'org.springframework.security:spring-security-core'
    // 持久化
    implementation 'p6spy:p6spy:3.9.1'
    implementation 'com.baomidou:mybatis-plus-spring-boot3-starter'
    implementation 'com.baomidou:mybatis-plus-jsqlparser'
    implementation 'org.postgresql:postgresql:42.6.0'
    // 工具依赖
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    // 测试组件
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

compileJava {
	options.compilerArgs += [
			'-Amapstruct.suppressGeneratorTimestamp=true',
			'-Amapstruct.suppressGeneratorVersionInfoComment=true',
			'-Amapstruct.verbose=true'
	]
}

sourceSets {
	main {
		resources {
			//可以将java目录下的所有非.java资源打包到classes下
			srcDir 'src/main/java'
		}
	}

	test {
		resources {
			//可以将java目录下的所有非.java资源打包到classes下
			srcDir 'src/test/groovy'
		}
	}
}

tasks.register('copyTestResources', Copy) {
	from "${projectDir}/src/test/resources"
	into "${buildDir}/resources/test"
}
processTestResources.dependsOn copyTestResources

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
	options.warnings = false
	options.deprecation = true
	options.compilerArgs += ["-parameters"]
}

//jib {
//    to {
//        image = 'huaxiexiyan/catguild-gateway:main'
//    }
//    container {
//        jvmFlags = ['-Xmx64m', '-Xms64m'] // 添加堆内存参数
//        creationTime = 'USE_CURRENT_TIMESTAMP'
//        environment = [
//                'TZ': 'Asia/Shanghai'
//        ]
//    }
//}
